"0","n = 5"
"0",""
"0","log_seq = function(n,ln=15) {"
"0",""
"0","  # Create a sequence from 1 to n"
"0","  seq = seq(1, n, length.out = ln-1)"
"0","  "
"0","  # Apply the logarithm to the sequence"
"0","  log_seq = log(seq)"
"0","  "
"0","  # Scale the sequence to the range [0, 1]"
"0","  min_val = min(log_seq)"
"0","  max_val = max(log_seq)"
"0","  one_seq = ((log_seq - min_val) / (max_val - min_val))"
"0","  "
"0","  # Reverse pattern of scale so breaks are focussed on lower rather than upper end of scale"
"0","  one_seq_rev = one_seq %>% {. - max(.)} %>% {. * -1} %>% rev()"
"0","  "
"0","  # Scale sequence to n"
"0","  scaled_one_seq = one_seq_rev %>% {. * n} %>% round() %>% {. + 1} %>% c(0,.) %>% {. / (n + 1)}"
"0","  "
"0","  return(scaled_one_seq)"
"0","}"
"0",""
"0","log_seq(500,5)"
"1","[1]"
"1"," 0.000000000"
"1"," 0.001996008"
"1"," 0.067864271"
"1"," 0.177644711"
"1"," 1.000000000"
"1","
"
